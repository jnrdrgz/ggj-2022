[gd_scene load_steps=13 format=2]

[ext_resource path="res://DemoPlat.tscn" type="PackedScene" id=1]
[ext_resource path="res://Player.tscn" type="PackedScene" id=2]
[ext_resource path="res://Assets/back1.jpg" type="Texture" id=3]
[ext_resource path="res://Levels/Level2SliceBrother.gd" type="Script" id=4]
[ext_resource path="res://SceneChangerTester.tscn" type="PackedScene" id=5]
[ext_resource path="res://MagicaDispenser.tscn" type="PackedScene" id=6]
[ext_resource path="res://BackInTimeClock.tscn" type="PackedScene" id=7]
[ext_resource path="res://Chandelier.tscn" type="PackedScene" id=8]
[ext_resource path="res://Player2.tscn" type="PackedScene" id=9]
[ext_resource path="res://Checkpoint.tscn" type="PackedScene" id=10]
[ext_resource path="res://ChandlerAttackUpFire.tscn" type="PackedScene" id=11]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

export (int) var speed = 200
export (int) var climbing_speed = 200
export (int) var jump_speed = -450
export (int) var gravity = 1200
export (int) var floor_timer_limit = 1
export (bool) var player2 = false
export (bool) var deactivated = false

export (bool) var invincible = false


var is_in_ladder = false
var velocity = Vector2.ZERO

var custom_is_on_floor = false
var is_in_grace_zone = false

onready var floor_timer = $FloorTimer
onready var has_to_go_back_in_time_timer = $HasToGoBackInTimeTimer
onready var sprite = $Sprite
onready var anim_player = $AnimationPlayer
func play_anim(anim):
	if anim_player.current_animation == anim:
		return
	anim_player.play(anim)
	
onready var start_position = global_position

var player_movements_queue = []
var player_movements_queue_all = []
var back_in_time_movs = []
var player_movements_to_back_in_time = []
var action_time = 0
var time_in_action_jump = 0
var has_to_go_back_in_time_time : int = 2

var action_time_tigrered = false
var jump_action_in_queue = false
var has_to_go_back_in_time : bool = false
var dead = false

signal player_dead()

func _ready():
	#$Camera2D.global_position.x = global_position.x - 50
	#$Camera2D.global_position.y = global_position.y
	#if player2:
	#	$Camera2D.current = false
		#$Camera2D.queue_free()
	floor_timer.set_wait_time(floor_timer_limit)
	has_to_go_back_in_time_timer.set_wait_time(has_to_go_back_in_time_time)

func go_back_in_time_clock(seconds=0):
	$Sprite.get_material().set_shader_param(\"activate\", true)
	has_to_go_back_in_time = true
	if seconds == 0:
		seconds = has_to_go_back_in_time_time
		has_to_go_back_in_time_timer.set_wait_time(seconds)

	has_to_go_back_in_time_timer.start()

#func action_seconds(action, seconds):

func pop_front_action():
	var act = player_movements_queue.pop_front()
	print(player_movements_queue)
	return act
	
func get_input():
	velocity.x = 0
	if Input.is_action_pressed(\"walk_right\"):
		if !action_time_tigrered:
			action_time = OS.get_ticks_msec()
			action_time_tigrered = true
		#if player2:
		#	yield(get_tree().create_timer(0.5), \"timeout\")
		velocity.x += speed
		if !is_in_ladder:
			play_anim(\"walking\")
			sprite.flip_h = false
	elif Input.is_action_just_released(\"walk_right\"):
		var time_in_action = OS.get_ticks_msec() - action_time
		action_time_tigrered = false
		#player_movements_queue.push_back([\"walk_right\", time_in_action])
		if jump_action_in_queue:
			#player_movements_queue.push_back([\"jump\", 0])
			jump_action_in_queue = false
			
		#print(player_movements_queue)
		
	elif Input.is_action_pressed(\"walk_left\"):
		if !action_time_tigrered:
			action_time = OS.get_ticks_msec()
			action_time_tigrered = true

		velocity.x -= speed
		if !is_in_ladder:
			play_anim(\"walking\")
			sprite.flip_h = true
	elif Input.is_action_just_released(\"walk_left\"):
		var time_in_action = OS.get_ticks_msec() - action_time
		action_time_tigrered = false
		#player_movements_queue.push_back([\"walk_left\", time_in_action])
		if jump_action_in_queue:
			#player_movements_queue.push_back([\"jump\", 0])
			jump_action_in_queue = false

	elif Input.is_action_pressed(\"up_arrow\"):
		if is_in_ladder:
			velocity.y = -climbing_speed
			play_anim(\"climbing\")
	elif Input.is_action_pressed(\"down_arrow\"):
		if is_in_ladder:
			velocity.y = climbing_speed
			play_anim(\"climbing\")
		if is_on_floor():
			play_anim(\"downing\")
	else:
		if is_in_ladder:
			velocity.y = 0
			play_anim(\"climbing_idle\")
		if is_on_floor():
			play_anim(\"idle\")		

func do_record():
	#print(\"recrodiing\", len(player_movements_to_back_in_time))
	#if(time_travel)
	#print(\"test\", len(player_movements_to_back_in_time))
	player_movements_to_back_in_time.push_back(
		[anim_player.current_animation, global_position, sprite.flip_h, sprite.flip_v])
	
	if(len(player_movements_to_back_in_time) > 13000):
		#print(\"limit\")
		player_movements_to_back_in_time.pop_front()
	#print()
	#count += 1
	#save_data[String(count)] = 
	player_movements_queue_all.push_back(
		[anim_player.current_animation, global_position, sprite.flip_h, sprite.flip_v])
	#if(Input.is_action_just_pressed(\"ui_down\")):
	#if(Input.is_action_just_pressed(\"ui_down\")):
	#	var f := File.new()
	#	f.open(\"res://ghosts/\" + get_tree().current_scene.name + \".json\", File.WRITE)
	#	prints(\"Saving to\", f.get_path_absolute())
	#	f.store_string(JSON.print(save_data))
	#	f.close()

var back_in_time_action_count = 0
func get_recording():
	back_in_time_action_count += 1
	var test = back_in_time_movs.pop_back()#load_data.get(String(count))
	if(test != null):
		#print(test[1])
		var space = 0
		play_anim(test[0])
		sprite.flip_h = test[2]
		sprite.flip_v = test[3]
		global_position = test[1]
		
func get_back_in_time_array():
	for m in player_movements_to_back_in_time:
		back_in_time_movs.append(m)	
	#player_movements_to_back_in_time.clear()
	#back_in_time_movs.invert()

func go_back_in_time():
	if back_in_time_action_count == 0:
		get_back_in_time_array()
	if !dead:
		get_recording()
	
func _physics_process(delta):
	if dead || deactivated:
		return
	#if !is_on_floor():
	#	floor_timer.start()
	#else:
	#	custom_is_on_floor = true
	
	if has_to_go_back_in_time:
		do_record()
		go_back_in_time()
		return
	
	if Input.is_action_pressed(\"test_reverse\"):
		do_record()
		go_back_in_time()
		return
	if Input.is_action_just_released(\"test_reverse\"):
		player_movements_to_back_in_time.clear()
		back_in_time_movs.clear()
		back_in_time_action_count = 0
		return
		
	do_record()
	get_input()
	if(!is_in_ladder):
		velocity.y += gravity * delta
	
	velocity = move_and_slide(velocity, Vector2.UP)
	if Input.is_action_just_pressed(\"jump\"):
		if is_on_floor() or is_in_grace_zone:
			#player_movements_queue.push_back([\"jump\", 0.1])
			velocity.y = jump_speed
			#jump_action_in_queue = true
			#var time_in_action = OS.get_ticks_msec() - time_in_action_jump
		
	elif Input.is_action_just_released(\"jump\"):
		#var time_in_action_jump = OS.get_ticks_msec() - action_time
		action_time_tigrered = false
		
	if !is_on_floor() and !is_in_ladder:
		if !is_in_ladder:
			play_anim(\"jumping\")

func set_is_in_ladder(b):
	is_in_ladder = b

func _on_DeathZone_body_entered(body):
	player_movements_queue = []
	global_position = start_position

func respawn():
	global_position = start_position
	dead = false

func kill():
	if !invincible:
		velocity = Vector2.ZERO
		dead = true
		$AnimationPlayer.play(\"die\")
		yield($AnimationPlayer, \"animation_finished\")
		#respawn()
		emit_signal(\"player_dead\")
		
	
func _on_FloorTimer_timeout():
	custom_is_on_floor = false


func _on_HasToGoBackInTimeTimer_timeout():
	has_to_go_back_in_time = false	
	player_movements_to_back_in_time.clear()
	back_in_time_movs.clear()
	back_in_time_action_count = 0
	$Sprite.get_material().set_shader_param(\"activate\", false)
"

[node name="Node2D" type="Node2D"]
script = ExtResource( 4 )

[node name="Polygon2D" type="Polygon2D" parent="."]
texture = ExtResource( 3 )
polygon = PoolVector2Array( -948, -286, 2192, -238, 2215, 1337, -953, 1315 )

[node name="SceneChangerTester" parent="." instance=ExtResource( 5 )]
position = Vector2( 391, -209 )

[node name="Platforms" type="Node2D" parent="."]
position = Vector2( -457, 524 )
scale = Vector2( 0.6, 0.6 )

[node name="Plat24" parent="Platforms" instance=ExtResource( 1 )]
position = Vector2( 391.667, -901.667 )
rotation = 1.58794

[node name="Plat25" parent="Platforms" instance=ExtResource( 1 )]
position = Vector2( 395, -1008.33 )
rotation = 1.58794

[node name="Plat27" parent="Platforms" instance=ExtResource( 1 )]
position = Vector2( 395, -1126.67 )
rotation = 1.58794

[node name="Plat26" parent="Platforms" instance=ExtResource( 1 )]
position = Vector2( -3.33337, -346.667 )
rotation = 1.58794

[node name="Plat28" parent="Platforms" instance=ExtResource( 1 )]
position = Vector2( -3.33325, -466.667 )
rotation = 1.58794

[node name="Plat15" parent="Platforms" instance=ExtResource( 1 )]
position = Vector2( 605, 231.667 )

[node name="Plat16" parent="Platforms/Plat15" instance=ExtResource( 1 )]
position = Vector2( -100, -46.6667 )

[node name="Plat17" parent="Platforms/Plat15" instance=ExtResource( 1 )]
position = Vector2( -191.667, -95 )

[node name="Plat18" parent="Platforms/Plat15" instance=ExtResource( 1 )]
position = Vector2( -273.333, -140 )

[node name="Plat19" parent="Platforms/Plat15" instance=ExtResource( 1 )]
position = Vector2( -358.333, -191.667 )

[node name="Plat20" parent="Platforms/Plat15" instance=ExtResource( 1 )]
position = Vector2( -448.333, -253.333 )

[node name="Plat21" parent="Platforms/Plat15" instance=ExtResource( 1 )]
position = Vector2( -568.333, -290 )

[node name="Plat22" parent="Platforms/Plat15" instance=ExtResource( 1 )]
position = Vector2( -655, -340 )

[node name="Plat25" parent="Platforms/Plat15" instance=ExtResource( 1 )]
position = Vector2( -655, -340 )

[node name="Plat23" parent="Platforms/Plat15" instance=ExtResource( 1 )]
position = Vector2( -610, -456.667 )
rotation = 1.58794

[node name="Plat24" parent="Platforms/Plat15" instance=ExtResource( 1 )]
position = Vector2( -526.667, 255 )
rotation = 1.58794

[node name="Plat26" parent="Platforms/Plat15" instance=ExtResource( 1 )]
position = Vector2( -523.333, 133.333 )
rotation = 1.58794

[node name="Plat27" parent="Platforms/Plat15" instance=ExtResource( 1 )]
position = Vector2( -518.333, 18.3333 )
rotation = 1.58794

[node name="Plat16" parent="Platforms" instance=ExtResource( 1 )]
position = Vector2( 803.333, -523.333 )

[node name="Plat16" parent="Platforms/Plat16" instance=ExtResource( 1 )]
position = Vector2( -100, -46.6667 )

[node name="Plat17" parent="Platforms/Plat16" instance=ExtResource( 1 )]
position = Vector2( -191.667, -95 )

[node name="Plat18" parent="Platforms/Plat16" instance=ExtResource( 1 )]
position = Vector2( -273.333, -140 )

[node name="Plat19" parent="Platforms/Plat16" instance=ExtResource( 1 )]
position = Vector2( -358.333, -191.667 )

[node name="Plat20" parent="Platforms/Plat16" instance=ExtResource( 1 )]
position = Vector2( -448.333, -253.333 )

[node name="Plat" parent="Platforms" instance=ExtResource( 1 )]
position = Vector2( 78.3334, 541.667 )

[node name="Plat2" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 244.333, -60.3333 )

[node name="Plat4" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 366, -90.3334 )

[node name="Plat5" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 487.667, -123.667 )

[node name="Plat6" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 582.667, -173.667 )

[node name="Plat7" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 787.667, -218.667 )

[node name="Plat8" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 664.333, -218.667 )

[node name="Plat9" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 907.667, -217 )

[node name="Plat12" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 954.333, -460.333 )

[node name="Plat13" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 831, -460.333 )

[node name="Plat14" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 711, -462 )

[node name="Plat10" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 1027.67, -290.333 )
rotation = -1.56839

[node name="Plat15" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 1030, -458.334 )
rotation = -1.56839

[node name="Plat16" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 1031.67, -578.334 )
rotation = -1.56839

[node name="Plat17" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 1031.67, -688.333 )
rotation = -1.56839

[node name="Plat18" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 1035, -805 )
rotation = -1.56839

[node name="Plat11" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 1027.67, -168.667 )
rotation = -1.56839

[node name="Plat3" parent="Platforms/Plat" instance=ExtResource( 1 )]
position = Vector2( 122.667, -28.6667 )

[node name="Plat2" parent="Platforms" instance=ExtResource( 1 )]
position = Vector2( 153.333, -186.667 )

[node name="Plat2" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 244.333, -60.3333 )

[node name="Plat4" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 366, -90.3334 )

[node name="Plat5" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 487.667, -123.667 )

[node name="Plat6" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 582.667, -173.667 )

[node name="Plat7" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 787.667, -218.667 )

[node name="Plat8" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 664.333, -218.667 )

[node name="Plat9" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 906.667, -218.333 )

[node name="Plat12" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 954.333, -460.333 )

[node name="Plat13" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 831, -460.333 )

[node name="Plat14" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 711, -462 )

[node name="Plat10" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 1027.67, -290.333 )
rotation = -1.56839

[node name="Plat15" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 1028.33, -458.333 )
rotation = -1.56839

[node name="Plat16" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 1030, -585 )
rotation = -1.56839

[node name="Plat11" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 1027.67, -168.667 )
rotation = -1.56839

[node name="Plat3" parent="Platforms/Plat2" instance=ExtResource( 1 )]
position = Vector2( 122.667, -28.6667 )

[node name="Plat3" parent="Platforms" instance=ExtResource( 1 )]
position = Vector2( 621.667, -830 )

[node name="Plat2" parent="Platforms/Plat3" instance=ExtResource( 1 )]
position = Vector2( 244.333, -60.3333 )

[node name="Plat4" parent="Platforms/Plat3" instance=ExtResource( 1 )]
position = Vector2( 366, -90.3334 )

[node name="Plat5" parent="Platforms/Plat3" instance=ExtResource( 1 )]
position = Vector2( 487.667, -123.667 )

[node name="Plat6" parent="Platforms/Plat3" instance=ExtResource( 1 )]
position = Vector2( 582.667, -173.667 )

[node name="Plat7" parent="Platforms/Plat3" instance=ExtResource( 1 )]
position = Vector2( 787.667, -218.667 )

[node name="Plat8" parent="Platforms/Plat3" instance=ExtResource( 1 )]
position = Vector2( 664.333, -218.667 )

[node name="Plat9" parent="Platforms/Plat3" instance=ExtResource( 1 )]
position = Vector2( 907.667, -217 )

[node name="Plat12" parent="Platforms/Plat3" instance=ExtResource( 1 )]
position = Vector2( 954.333, -460.333 )

[node name="Plat13" parent="Platforms/Plat3" instance=ExtResource( 1 )]
position = Vector2( 831, -460.333 )

[node name="Plat14" parent="Platforms/Plat3" instance=ExtResource( 1 )]
position = Vector2( 711, -462 )

[node name="Plat10" parent="Platforms/Plat3" instance=ExtResource( 1 )]
position = Vector2( 1027.67, -290.333 )
rotation = -1.56839

[node name="Plat11" parent="Platforms/Plat3" instance=ExtResource( 1 )]
position = Vector2( 1027.67, -168.667 )
rotation = -1.56839

[node name="Plat3" parent="Platforms/Plat3" instance=ExtResource( 1 )]
position = Vector2( 122.667, -28.6667 )

[node name="Objects" type="Node2D" parent="."]

[node name="BackInTimeClock" parent="Objects" instance=ExtResource( 7 )]
position = Vector2( -206, 537 )

[node name="BackInTimeClock2" parent="Objects" instance=ExtResource( 7 )]
position = Vector2( -301, 487 )

[node name="BackInTimeClock3" parent="Objects" instance=ExtResource( 7 )]
position = Vector2( -45, 324 )

[node name="BackInTimeClock4" parent="Objects" instance=ExtResource( 7 )]
position = Vector2( -189, 46 )

[node name="BackInTimeClock5" parent="Objects" instance=ExtResource( 7 )]
position = Vector2( 273, -90 )

[node name="MagicaDispenser3" parent="Objects" instance=ExtResource( 6 )]
position = Vector2( 200, 123 )
max_objects = 6
time_between_objects = 3

[node name="MagicaDispenser" parent="Objects" instance=ExtResource( 6 )]
position = Vector2( 115, 262 )
max_objects = 10
time_between_objects = 2
dispenser_type = 2

[node name="MagicaDispenser2" parent="Objects" instance=ExtResource( 6 )]
position = Vector2( 36, 700 )
dispenser_type = 2

[node name="ChandlerUpAttack" parent="Objects" instance=ExtResource( 11 )]
position = Vector2( -225, 790 )
scale = Vector2( 0.5, 0.5 )

[node name="ChandlerUpAttack2" parent="Objects" instance=ExtResource( 11 )]
position = Vector2( -93, 753 )
scale = Vector2( 0.5, 0.5 )
time1 = 2
time2 = 4

[node name="Chandelier" parent="Objects" instance=ExtResource( 8 )]
position = Vector2( -243, 404 )
scale = Vector2( 0.47262, 0.458743 )

[node name="Checkpoint" parent="Objects" instance=ExtResource( 10 )]
position = Vector2( 201, 82 )
sprite_type = 16

[node name="Checkpoint2" parent="Objects" instance=ExtResource( 10 )]
position = Vector2( -426, 399 )

[node name="Player2" parent="." instance=ExtResource( 9 )]
position = Vector2( -402, 796 )
scale = Vector2( 0.5, 0.5 )

[node name="Player" parent="." instance=ExtResource( 2 )]
position = Vector2( -375, 805 )
scale = Vector2( 0.5, 0.5 )
script = SubResource( 1 )

[connection signal="_time_to_change_level" from="SceneChangerTester" to="." method="_on_SceneChangerTester__time_to_change_level"]
[connection signal="checkpoint_touched" from="Objects/Checkpoint" to="." method="_on_Checkpoint_checkpoint_touched"]
[connection signal="checkpoint_touched" from="Objects/Checkpoint2" to="." method="_on_Checkpoint2_checkpoint_touched"]
[connection signal="player_dead" from="Player" to="." method="_on_Player_player_dead"]
